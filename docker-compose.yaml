version: "3.7"

services:
  # region Public services
  test-task-app:
    hostname: test_task_best_way-app
    image: test-task-app
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - APP_PORT=3011
    ports:
      - "3011:3011"
    networks:
      - jumpserver
      - default
    depends_on:
      - redis-message-bus
      - mongodb-single-replica
  # endregion

  # region Private services
  redis-message-bus:
    hostname: test_task_best_way-redis
    image: "redis:5.0-alpine"
    restart: always
    ports:
      - "3012:6379"
    networks:
      - jumpserver
      - default

  mongodb-single-replica:
    image: mongo:5.0.4
    hostname: test_task_best_way-mongodb
    restart: always
    environment:
      - MONGODB_DATABASE="best-way"
    ports:
      - "3013:3013"
    volumes:
      - ./docker/volume/mongodb_local:/data/db
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "3013" ]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'test_task_best_way-mongodb:3013'}]}) }" | mongosh --port 3013 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    networks:
      - jumpserver
      - default
  # endregion

networks:
  jumpserver:
    external: true
